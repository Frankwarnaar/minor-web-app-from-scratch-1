/*Week 1: Javascript Objecten & Patterns

	Client side single page web app => Html, css & Javascript

	Waarom Design Patters --> 
	-Herbruikbare stukken code
	-Gestructureerder, vaak korter
	-Makkelijk uit te breiden en aan te passen code.
	-Informatie is alleen beschikbaar waar je het nodig hebt*/



	// Object voorbeeld: 
	var student = {
		name: "Rob"
	};
	console.log(student);

	// Variatie: 
	var student = 9;
	console.log(typeof student);


	// Make an object with multiple people
	var students {
		{
			name: "Rob",
			age: 22,
			generateMyInfo: function () {
				return ([this.name, this.age]);
			}

		}
		{
			name: "Tom",
			age: 30
		}
	};

	function generateStudentInfo(students) {
		console.log("My name is: " +students[0].name + " My age is: " + students[0].age);
	}	

	function generateStudentInfo(infoObject) {
		console.log("My name is: " + infoObject[0].name + " My age is: " + infoObject[0].age);
	}

	generateStudentInfo(students[1]);

	console.log(students[0].generateMyInfo());

	// Make an object with multiple people
	var students {
		{
			name: "Rob",
			age: 22,
			generateMyInfo: function () {
				return generateStudentInfo(this);
			}

		}
		{
			name: "Tom",
			age: 30
		}
	};

	console.log(students[0].generateMyInfo());